sudo: false
dist: focal
arch: [arm64] #[amd64,arm64]
language: go
go: "1.15.x"

service: [docker]
addons:
  apt:
    # conntrack, socat required by kubeadm
    packages: [jq,conntrack,socat]

before_install:
  # ensure we're using recent docker with containerd >= 1.3.4 so as to be able to use gcr mirror
  #- sh hack/update-docker.sh

  - sh hack/docker-systemd.sh
  # newer ubuntu may be masking unit files for docker? https://stackoverflow.com/a/37640824/600339
  - sudo systemctl unmask docker.service
  - sudo systemctl unmask docker.socket
  - sudo systemctl daemon-reload 
  - sudo systemctl start docker || journalctl -xe docker.service
  - sudo systemctl status docker
  - docker info

  # Remove buildkit'isms from Dockerfiles
  #- sh hack/strip-buildkitisms.sh

  # quell kubeadm complaints of `unable to load kernel module: "configs"`
  - sudo apt-get install linux-image-$(uname -r)

install: 
  - mkdir -p $HOME/bin
  - curl -Lo $HOME/bin/skaffold https://storage.googleapis.com/skaffold/builds/latest/skaffold-linux-${TRAVIS_CPU_ARCH}
  - curl -Lo $HOME/bin/container-structure-test https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-${TRAVIS_CPU_ARCH}
  #- curl -Lo $HOME/bin/minikube https://storage.googleapis.com/minikube-builds/master/minikube-linux-${TRAVIS_CPU_ARCH}
  - curl -Lo $HOME/bin/minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-${TRAVIS_CPU_ARCH}

  - curl -Lo $HOME/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/${TRAVIS_CPU_ARCH}/kubectl
  - chmod +x $HOME/bin/*
  - export PATH=$HOME/bin:$PATH
  - skaffold config set --global collect-metrics false

script:
  - if [ ! -e /dev/kmsg ]; then sudo ln -s /dev/console /dev/kmsg; fi
  - TERM=dumb sudo -E $HOME/bin/minikube start --driver=none --alsologtostderr -v=5
       --feature-gates="LocalStorageCapacityIsolation=false"
       --extra-config=kubelet.protect-kernel-defaults=true
    || (
      echo "== docker ps ==";
      docker ps;
      echo "== systemctl status kubelet ==";
      sudo systemctl status kubelet;
      echo "== journalctl -u kubelet -n all ==";
      sudo journalctl -u kubelet -n all;
      docker ps -a --format '{{.Image}} {{.ID}} {{.Names}}' |
        while read image cid name; do
          echo "=== docker log $cid ($image $name) ===";
          docker logs $cid | sed 's/^/> /';
        done;
      exit 1) 
    || travis_terminate $?

  - (cd nodejs/helper-image; go test .)
  - (cd python/helper-image/launcher; go test .)

  # try building before integration tests
  - skaffold build -p local -v info -p integration || travis_terminate $?

  # we had `run-its.sh` in `after_success` but it doesn't cause failures
  - bash ./run-its.sh -p local

